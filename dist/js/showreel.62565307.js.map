{"version":3,"sources":["webpack:///./src/assets/thumbnail/thumbnail3d.jpg","webpack:///./src/components/Popups/Showreel.vue","webpack:///./src/components/Popups/Showreel.vue?9dbd","webpack:///./src/assets/video/MarcusUniverseShowreel2022.mp4"],"names":["module","exports","class","ref","poster","_imports_0","controls","_createElementVNode","src","_imports_1","type","_hoisted_3","_createElementBlock","_hoisted_1","_hoisted_2","name","setup","videoElement","store","useStore","OpenVideo","computed","state","CloseVideoBox","commit","value","pause","currentTime","onClickOutside","watch","mozRequestFullScreen","webkitRequestFullScreen","volume","play","mounted","video","this","self","addEventListener","$store","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","event","console","log","__exports__","render"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,gC,8GCCrCC,MAAM,wB,GACDC,IAAI,eAAeD,MAAM,eAAeE,OAAAC,IAA4CC,SAAA,I,EACvFC,gCAA6E,UAArEC,IAAAC,IAAoDC,KAAK,a,YAAjEC,G,wDAFPC,gCAIM,MAJNC,EAIM,CAHHN,gCAEQ,QAFRO,EAEQ,S,4BAQG,GACXC,KAAM,WACNC,QACI,MAAMC,EAAed,iBAAI,MACnBe,EAAQC,iBACRC,EAAYC,sBAAS,IAAMH,EAAMI,MAAMF,WAM7C,SAASG,IACLL,EAAMM,OAAO,YAAY,GACzBP,EAAaQ,MAAMC,QACnBT,EAAaQ,MAAME,YAAc,EAkBrC,OAzBAC,4BAAeX,EAAc,KACzBM,MASJM,mBAAMT,EAAYK,IACVA,GACIR,EAAaQ,MAAMK,qBACnBb,EAAaQ,MAAMK,uBACZb,EAAaQ,MAAMM,yBAC1Bd,EAAaQ,MAAMM,0BAEvBd,EAAaQ,MAAMO,OAAS,GAC5Bf,EAAaQ,MAAMQ,SAEnBhB,EAAaQ,MAAMC,QACnBT,EAAaQ,MAAME,YAAc,KAIlC,CACHV,eACAM,kBAGRW,UACI,IAAIC,EAAQC,KAAKnB,aACboB,EAAOD,KAEE,MAATD,IACAA,EAAMG,iBAAiB,SAAS,WAC5BD,EAAKE,OAAOf,OAAO,YAAY,GAC3BW,EAAMK,eACNL,EAAMK,iBACDL,EAAMM,qBACXN,EAAMM,uBACDN,EAAMO,oBACXP,EAAMO,sBACDP,EAAMQ,kBACXR,EAAMQ,sBACX,GAGHR,EAAMG,iBAAiB,mBAAqBM,IACxCC,QAAQC,IAAI,mBAAoBF,Q,qBC/DhD,MAAMG,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,KAErD,gB,qBCPfhD,EAAOC,QAAU,IAA0B","file":"js/showreel.62565307.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/thumbnail3d.b8e5fd73.jpg\";","<template>\r\n <div class=\"Videobox Showreelbox\">\r\n    <video ref=\"videoElement\" class=\"VideoContent\" poster=\"@/assets/thumbnail/thumbnail3d.jpg\" controls>\r\n        <source src=\"@/assets/video/MarcusUniverseShowreel2022.mp4\" type=\"video/mp4\">\r\n    </video>\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch, computed } from 'vue'\r\nimport { onClickOutside } from '@vueuse/core'\r\nimport { useStore } from 'vuex';\r\nexport default {\r\n    name: 'Videobox',\r\n    setup() {\r\n        const videoElement = ref(null)\r\n        const store = useStore()\r\n        const OpenVideo = computed(() => store.state.OpenVideo)\r\n\r\n        onClickOutside(videoElement, () => {\r\n            CloseVideoBox();\r\n        })\r\n\r\n        function CloseVideoBox() {\r\n            store.commit('setVideo', false);\r\n            videoElement.value.pause();\r\n            videoElement.value.currentTime = 0;\r\n        }\r\n\r\n        watch(OpenVideo, (value) => {\r\n            if (value) {\r\n                if (videoElement.value.mozRequestFullScreen) {\r\n                    videoElement.value.mozRequestFullScreen();\r\n                } else if (videoElement.value.webkitRequestFullScreen) {\r\n                    videoElement.value.webkitRequestFullScreen();\r\n                }\r\n                videoElement.value.volume = 0.5\r\n                videoElement.value.play();\r\n            } else {\r\n                videoElement.value.pause();\r\n                videoElement.value.currentTime = 0;\r\n            }\r\n        })\r\n\r\n        return {\r\n            videoElement,\r\n            CloseVideoBox,\r\n        }\r\n    },\r\n    mounted() {\r\n        var video = this.videoElement;\r\n        var self = this;\r\n\r\n        if (video != null) {\r\n            video.addEventListener('ended', function () {\r\n                self.$store.commit('setVideo', false);\r\n                if (video.exitFullscreen)\r\n                    video.exitFullscreen();\r\n                else if (video.webkitExitFullscreen)\r\n                    video.webkitExitFullscreen();\r\n                else if (video.mozCancelFullScreen)\r\n                    video.mozCancelFullScreen();\r\n                else if (video.msExitFullscreen)\r\n                    video.msExitFullscreen();\r\n            }, false);\r\n\r\n\r\n            video.addEventListener('fullscreenchange', (event) => {\r\n                console.log('fullscreenchange', event);\r\n            });\r\n        }\r\n    },\r\n}\r\n</script>\r\n","import { render } from \"./Showreel.vue?vue&type=template&id=2411cc21\"\nimport script from \"./Showreel.vue?vue&type=script&lang=js\"\nexport * from \"./Showreel.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"M:\\\\Me\\\\WebPortfolio_2022\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","module.exports = __webpack_public_path__ + \"media/MarcusUniverseShowreel2022.cab71495.mp4\";"],"sourceRoot":""}